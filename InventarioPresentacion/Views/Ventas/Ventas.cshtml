@using InventarioDataAccess.Entities
@using Microsoft.EntityFrameworkCore.Metadata.Internal;
@model VentasViewModel
@{
    ViewData["Title"] = "Ventas";
}


<!-- Estilos y scripts de DataTables y Bootstrap -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap4.min.css">
 

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <h2 class="text-primary">Lista de Ventas</h2>
        </div>


    </div>

    <div class="row mt-3">
        <div class="col-12">
            <div class="d-flex justify-content-start mb-2">
                <!-- Botón Nuevo -->
                <!-- Enlace y botón para VentasItemsAsync -->
                 
                <a asp-controller="VentasItems" asp-action="VentasItemsCrear" class="btn btn-primary">Nuevo</a>



            </div>
            <br />



            <table id="miTabla" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th class="text-center">Nro Venta</th>
                        <th class="text-center">Nro Cliente</th>
                        <th class="text-center">Nombre Cliente</th>
                        <th class="text-center">Fecha</th>
                        <th class="text-center">Total</th>
                        <th class="text-center">Ver</th>
                        <th class="text-center">Editar</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null)
                    {
                        var index = -1;
                        @foreach (var Ventas in Model.ventas)
                        {
                            index++;
                            <tr style="text-align: center;">
                                <td>@Ventas.ID<input type="hidden" name="Id" value="@Ventas.ID" data-action="DeleteCliente"></td>
                                <td>@Ventas.IDCliente</td>
                                <td>@Ventas.clientes?.cliente</td>
                                <td>@Ventas.Fecha.ToString("dd/MM/yyyy")</td>
                                <td>@Ventas.Total</td>
                                <td><a asp-controller="VentasItems" asp-action="VentasItems" asp-route-id="@Ventas.ID" class="btn btn-warning"><i class="far fa-eye"></i></a></td>
                                <td><a asp-controller="VentasItems" asp-action="VentasItems" asp-route-id="@Ventas.ID" class="btn btn-success"><i class="fas fa-edit"></i></a></td>   
                            </tr>
                        }
                    }
                </tbody>
            </table>
            <br />
            <br />
            <br />
        </div>
    </div>
</div>




 




 


<!-- Scripts al final del documento para garantizar la carga adecuada -->

<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

<script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap4.min.js"></script>
<!--font estilos-->
<script src="https://kit.fontawesome.com/eaa3fcb206.js" crossorigin="anonymous"></script>

<script>


    var idcliente; // usada para modificar y eliminar


    var mitabla = $('#miTabla').DataTable({
        "paging": true,
        "pageLength": 8, // Número de elementos por página
        // "lengthChange": false,
        "language": {
            "sProcessing": "Procesando...",
            "sLengthMenu": "Mostrar _MENU_ registros",
            "sZeroRecords": "No se encontraron resultados",
            "sInfo": "Mostrando _START_ a _END_ de _TOTAL_ registros  <br/> <br/>",
            "sInfoEmpty": "Mostrando 0 a 0 de 0 registros",
            "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
            "sInfoPostFix": "",
            "sSearch": "Buscar:",
            "sUrl": "",
            "sEmptyTable": "No hay datos disponibles en la tabla",
            "sLoadingRecords": "Cargando...",
            "sInfoThousands": ",",
            "sDecimal": ".",
            "sGroupThousands": ",",
            "sSearchPlaceholder": "Introduce un valor",
            "oPaginate": {
                "sFirst": "Primero ",
                "sPrevious": "Anterior",
                "sNext": "Siguiente",
                "sLast": "Último"
            },
            "oAria": {
                "sSortAscending": ": Activar para ordenar la columna de forma ascendente",
                "sSortDescending": ": Activar para ordenar la columna de forma descendente"
            }
        },
        // Modificar las columnas que se muestran
        "columns": [
            { "data": "id" },
            { "data": "IDCliente" },
            { "data": "Cliente" },
            { "data": "Fecha" },
            { "data": "Total" },
            { "data": "btnver" },
            { "data": "btneditar" }
        ]
    });

    // Función para manejar la acción de eliminar
    function eliminarCliente(idcliente) {
        if (confirm('¿Está seguro de que desea eliminar este cliente?')) {
            $.ajax({
                url: '/Productos/' + idcliente,
                type: 'DELETE',
                success: function (result) {
                    if (result.success) {
                        // Mostrar mensaje de éxito si es necesario
                        console.log(result.message);

                        // Redirigir al URL proporcionado en el resultado
                        window.location.href = result.redirectTo;
                    } else {
                        // Mostrar mensaje de error si es necesario
                        console.error(result.message);
                    }
                },
                error: function (error) {
                    // Manejar error en el lado del cliente
                    console.error('Error al actualizar el cliente', error);
                }
            });
        }
    }



    // Inicializar DataTables con paginación

    // Función para manejar la acción de modificar

    function modificarCliente(boton, ID) {

        var id = $(boton).data('id');
        // Obtener los datos del cliente seleccionado
        var Productos = mitabla.row(id).data();

        // Comprobar si la fila se encontró
        if (!Productos) {
            // Maneja el caso en que no se encontró la fila
            console.error("Fila seleccionada no encontrada");
            return;
        }
        $('#myModal').modal('show');
        // Rellena los campos del formulario con los datos del registro
        idcliente = ID;
        $("#nombre").val(Productos.Nombre);
        $("#precio").val(Productos.precio);
        $("#categoria").val(Productos.categoria);


        $('#modificar').show();
        $('#nuevo').hide();


    }




    function guardarModificacion() {
        var nombre = $('input[name="Nombre"]').val();
        var precio = $('input[name="precio"]').val();
        var categoria = $('input[name="categoria"]').val();

        // Crea un objeto de tipo Clientes
        function Producto(id, nombre, precio, categoria) {
            this.ID = id;
            this.Nombre = nombre;
            this.precio = precio;
            this.categoria = categoria;
        }
        // Crea un objeto de tipo Clientes
        var Producto = new Producto(idcliente, nombre, precio, categoria)


        // Envia el objeto al controlador
        try {
            $.ajax({
                url: 'https://localhost:7151/Productos',
                type: 'PUT',
                data: JSON.stringify(Producto),
                contentType: 'application/json',
                dataType: 'json',
                success: function (result) {
                    if (result.success) {
                        // Mostrar mensaje de éxito si es necesario
                        console.log(result.message);

                        // Redirigir al URL proporcionado en el resultado
                        window.location.href = result.redirectTo;
                    } else {
                        // Mostrar mensaje de error si es necesario
                        console.error(result.message);
                    }
                },
                error: function (error) {
                    // Manejar error en el lado del cliente
                    console.error('Error al actualizar el cliente', error);
                }
            });
        } catch (e) {
            // Handle the error
        }

        $('#myModal').modal('hide');
    }





 
        function NuevoCliente() {
      
            // Hacer la solicitud GET con $.get()
            $.get('https://localhost:7151/VentasItems/AltaVenta', function (data) {  
                console.log(data);
               
            });
        }
 


    function cerrarModal() {
        $('#myModal').modal('hide');
    }

     $(document).ready(function () {
            // Detectar cambio en el DropDownList
            $("#ventaDropDown").change(function () {
            var selectedIdCliente = $(this).val();

            $("#idcliente").val(selectedIdCliente);
 
            });

        $("#categoriasDropDown").change(function () {
            var selectedIdCategoria = $(this).val();

            $("#categoria").val(selectedIdCategoria);

        });
        });



</script>
