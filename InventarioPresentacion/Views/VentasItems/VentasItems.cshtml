@using InventarioDataAccess.Entities
@using Microsoft.EntityFrameworkCore.Metadata.Internal;
@model VentasViewModel
@{
    ViewData["Title"] = "Detalle de ventas";
}


<!-- Estilos y scripts de DataTables y Bootstrap -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap4.min.css">



<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <h2 class="text-primary">Detalle de ventas</h2>
        </div>


    </div>

    <div class="row mt-3">
        <div class="col-12">
            <div class="d-flex justify-content-start mb-2">
                <!-- Botón Nuevo -->
                <button type="button" class="btn btn-primary" onclick="NuevoItem()" style="margin-right: 10px;">Nuevo item</button>
            </div>
            <br />



            <table id="miTabla" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th class="text-center text-nowrap">Nro Item</th>
                        <th class="text-center text-nowrap">Cliente</th>
                        <th class="text-center text-nowrap">Producto</th>
                        <th class="text-center text-nowrap">Fecha</th>
                        <th class="text-center text-nowrap">Precio U</th>
                        <th class="text-center text-nowrap">Cantidad</th>
                        <th class="text-center text-nowrap">Precio total</th>
                        <th class="text-center text-nowrap">Eliminar</th>
                        <th class="text-center text-nowrap">Modificar</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null)
                    {
                        var index = -1;
                        @foreach (var Ventas in Model.ventasItems)
                        {
                            index++;
                            <tr style="text-align: center;">
                                <td>@Ventas.ID<input type="hidden" name="Id" value="@Ventas.ID" data-action="DeleteCliente"></td>
                                <td>@Ventas.ventas?.clientes?.cliente</td>
                                <td>@Ventas.productos?.Nombre</td>
                                <td>@Ventas.ventas?.Fecha.ToShortDateString()</td>
                                <td>@Ventas.PrecioUnitario</td>
                                <td>@Ventas.Cantidad</td>
                                <td>@Ventas.PrecioTotal</td>
                                <td>
                                    <button class="btn btn-danger" onclick="eliminarCliente(@Ventas.ID,@Ventas.IDVenta)">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </td>
                                <td>
                                    <button id="{{id}}" data-id="@index" class="btn btn-warning" onclick="Modificar(@Ventas.ID,@Ventas.Cantidad,@Ventas.IDProducto)">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
            <br />
            <br />
            <br />
        </div>
    </div>
</div>



<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Mi Modal</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="cerrarModal()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Formulario para cargar el nombre, correo y teléfono del cliente -->
                <div id="updateForm" >
                    <div class="form-group" style="display:none" >
                        <label for="IDVentasItems">IDVentasItems:</label>
                        <input id="IDVentasItems" type="number" class="form-control" name="IDVentasItems">
                    </div>
                    <div class="form-group" style="display:none" 
                        <label for="IDVenta">IDVenta:</label>
                        <input id="IDVenta" type="number" class="form-control" name="IDVenta" required >
                    </div>
                    <div class="form-group">
                        <label for="IDProducto">Seleccione el nuevo producto:</label>
                        @if (Model.productos is not null)
                        {
                            @Html.DropDownList("IDProducto",
                                     new SelectList(Model.productos, "ID", "Nombre"),
                                     "Seleccione un producto",
                                     new { @class = "form-control", id = "ventaDropDown"/* , style = "width: 200px;" */ })
                        }
                        else
                        {
                            <p>No hay datos disponibles.</p>
                        }
                        <input id="IDProducto" type="number" class="form-control" name="IDProducto" required style="display:none" >
                    </div>

                    <div class="form-group"  style="display:none">
                        <label for="PrecioUnitario">PrecioUnitario:</label>
                        <input id="PrecioUnitario" type="number" class="form-control" name="PrecioUnitario" disabled="true">
                    </div>
                    <div class="form-group">
                        <label for="Cantidad">Cantidad:</label>
                        <input id="Cantidad" type="number" class="form-control" name="Cantidad" required>
                    </div>
                    <div class="form-group" style="display:none">
                        <label for="PrecioTotal">PrecioTotal:</label>
                        <input id="PrecioTotal" type="number" class="form-control" name="PrecioTotal" required>
                    </div>
                    <button id="nuevoItem" type="submit" class="btn btn-primary" onclick="guardar()">Guardar</button>
                </div>
            </div>
            <div class="modal-footer">
                <button id="modificar" type="submit" class="btn btn-primary" onclick="updateData()">Modificar</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="cerrarModal()">Cerrar</button>
                <!-- Puedes agregar más botones según tus necesidades -->
            </div>
        </div>
    </div>
</div>


<!-- Scripts al final del documento para garantizar la carga adecuada -->

<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

<script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap4.min.js"></script>

<!--font estilos-->
<script src="https://kit.fontawesome.com/eaa3fcb206.js" crossorigin="anonymous"></script>

<script>


    var idcliente; // usada para modificar y eliminar


    var mitabla = $('#miTabla').DataTable({
        "paging": true,
        "pageLength": 8, // Número de elementos por página
        // "lengthChange": false,
        "language": {
            "sProcessing": "Procesando...",
            "sLengthMenu": "Mostrar _MENU_ registros",
            "sZeroRecords": "No se encontraron resultados",
            "sInfo": "Mostrando _START_ a _END_ de _TOTAL_ registros  <br/> <br/>",
            "sInfoEmpty": "Mostrando 0 a 0 de 0 registros",
            "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
            "sInfoPostFix": "",
            "sSearch": "Buscar:",
            "sUrl": "",
            "sEmptyTable": "No hay datos disponibles en la tabla",
            "sLoadingRecords": "Cargando...",
            "sInfoThousands": ",",
            "sDecimal": ".",
            "sGroupThousands": ",",
            "sSearchPlaceholder": "Introduce un valor",
            "oPaginate": {
                "sFirst": "Primero ",
                "sPrevious": "Anterior",
                "sNext": "Siguiente",
                "sLast": "Último"
            },
            "oAria": {
                "sSortAscending": ": Activar para ordenar la columna de forma ascendente",
                "sSortDescending": ": Activar para ordenar la columna de forma descendente"
            }
        },
        // Modificar las columnas que se muestran
        "columns": [
            { "data": "id" },
            { "data": "cliente" },
            { "data": "producto" },
            { "data": "fecha" },
            { "data": "preciounitario" },
            { "data": "cantidad" },
            { "data": "preciototal" },
            { "data": "btnEliminar" },
            { "data": "btnModificar" }
        ]
    });

    // Función para manejar la acción de eliminar
    function eliminarCliente(id, idventa) {
        if (confirm('¿Está seguro de que desea eliminar este cliente?')) {
            $.ajax({
                url: '/VentasItems/' + id + '/' + idventa,
                type: 'DELETE',
                success: function (result) {
                    if (result.success) {
                        // Mostrar mensaje de éxito si es necesario
                        console.log(result.message);
 
                        location.reload();
                    } else {
                        // Mostrar mensaje de error si es necesario
                        console.error(result.message);
                    }
                },
                error: function (error) {
                    // Manejar error en el lado del cliente
                    console.error('Error al actualizar el cliente', error);
                }
            });
        }
 

    }


     




    function Modificar(ID,cantidad,idproducto) {

        $("#nuevoItem").hide();
        $("#modificar").show();
        $("#ventaDropDown").val(idproducto);
        $("#IDVentasItems").val(ID);
        $("#PrecioUnitario").val(10);
        $("#IDProducto").val(idproducto);
        $("#PrecioTotal").val(10);
        $("#Cantidad").val(cantidad);
        $('#myModal').modal('show');
    }


    function cerrarModal() {
        $('#myModal').modal('hide');
    }

    var IDVenta = new URLSearchParams(window.location.search).get("id");
    $('#IDVenta').val(IDVenta);


 
    $(document).ready(function () {
        // Asigna un controlador de eventos al cambio del desplegable
        $("#ventaDropDown").change(function () {
            // Obtiene el valor seleccionado del desplegable
            var selectedValue = $(this).val();

            // Actualiza el valor del campo de entrada con el valor seleccionado
            $("#IDProducto").val(selectedValue);
         
        });
    });



    async function updateData() {
        // Obtén los datos del formulario
        var formData = {
            ID: $("#IDVentasItems").val(),
            IDVenta: $("#IDVenta").val(),
            IDProducto: $("#IDProducto").val(),
            PrecioUnitario: $("#PrecioUnitario").val(),
            Cantidad: $("#Cantidad").val(),
            PrecioTotal: $("#PrecioTotal").val(),
            // Agrega otros campos según tus necesidades
        };
        try {
            $.ajax({
                url: 'https://localhost:7151/VentasItems',
                type: 'PUT',
                data: JSON.stringify(formData),
                contentType: 'application/json',
                dataType: 'json',
                success: function (result) {
                    if (result.success) {
                        // Mostrar mensaje de éxito si es necesario
                        console.log(result.message);
                        // Redirigir al URL proporcionado en el resultado
                        window.location.href = 'https://localhost:7151/VentasItems?id=' + result.idVenta;
                    } else {
                        // Mostrar mensaje de error si es necesario
                        console.error(result.message);
                    }
                },
                error: function (error) {
                    // Manejar error en el lado del cliente
                    console.error('Error al actualizar el cliente', error);
                }
            });
        } catch (e) {
            // Handle the error
        }
        
       
    }




    function NuevoItem() {

        $("#modificar").hide();
        $("#nuevoItem").show();
        $("#ventaDropDown").val("");
        $("#IDVentasItems").val("");
        $("#PrecioUnitario").val(10);
        $("#IDProducto").val("");
        $("#PrecioTotal").val(10);
        $("#Cantidad").val("");
        $('#myModal').modal('show');

         
    }

    function guardar() { 
        
        var ventaItem = []

        ventaItem.push({
            IDVenta: $("#IDVenta").val(),
            IDProducto: $("#IDProducto").val(),
            PrecioUnitario: $("#PrecioUnitario").val(),
            Cantidad: $("#Cantidad").val(),
            PrecioTotal: $("#PrecioTotal").val(),
        });



 
        try {
            $.ajax({
                url: 'https://localhost:7151/VentasItems',
                type: 'POST',
                data: JSON.stringify(ventaItem),
                contentType: 'application/json',
                dataType: 'json',
                success: function (result) {
                    if (result.success) {
                        // Mostrar mensaje de éxito si es necesario
                        console.log(result.message);
                        // Redirigir al URL proporcionado en el resultado
                        window.location.href = 'https://localhost:7151/VentasItems?id=' + result.idVenta;
                    } else {
                        // Mostrar mensaje de error si es necesario
                        console.error(result.message);
                    }
                },
                error: function (error) {
                    // Manejar error en el lado del cliente
                    console.error('Error al actualizar el cliente', error);
                }
            });
        } catch (e) {
            // Handle the error
        }


    }




</script>
